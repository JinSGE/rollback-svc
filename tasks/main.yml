# ---
# # tasks file for roles/rollback-svc
# ###################################
# # 1) 방화벽 포트 제거
# # 2) 서비스 종료
# # 3) 서비스 설정 삭제
# # 4) 패키지 삭제 
# ###################################
# - name: 1) 방화벽 포트 제거 - "{{ fw_svc }}"
#   ansible.posix.firewalld:
#     service: "{{ item }}"
#     immediate: true
#     permanent: true
#     state: disabled
#   loop: "{{ fw_svc }}"
#   # 이미 포트가 제거되어 오류 발생시 무시하고 실행.
#   ignore_errors: true

# - name: 2) 서비스 종료 - "{{ svcs }}"
#   ansible.builtin.systemd:
#     name: "{{ item }}"
#     state: stopped
#     enabled: false
#   loop: "{{ svcs }}"

# - name: 3) 서비스 설정 삭제 - "{{ files }}"
#   ansible.builtin.file:
#     path: "{{ item }}"
#     state: absent
#   loop: "{{ files }}"

# - name: 4) 패키지 삭제 - "{{ pkgs }}"
#   ansible.builtin.dnf:
#     name: "{{ item }}"
#     state: absent 
#   loop: "{{ pkgs }}"


# 로그가 ㅈㄴ 김 그게 아쉬움
---
# tasks file for roles/rollback-svc
###################################
# 1) 방화벽 포트 제거
# 2) 서비스 종료
# 3) 서비스 설정 삭제
# 4) 패키지 삭제 
###################################
- name: 1) 방화벽 포트 제거
  ansible.builtin.firewalld:
    service: "{{ item }}"
    permanent: true
    state: disabled
    immediate: true
  loop: "{{ fw_svc }}"
  register: fw_remove_result
  failed_when: false
  ignore_errors: true

- name: 방화벽 제거 결과 메시지 출력
  ansible.builtin.debug:
    msg: "{{ item.item }} 포트 제거 {{ '성공' if item.changed else '실패 - 이미 제거되었거나 설정 문제 있음.' }}"
  loop: "{{ fw_remove_result.results }}"

- name: 2) 서비스 중지
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ svcs }}"
  register: svc_stop_result
  failed_when: false
  ignore_errors: true
  notify: 서비스 종료 완료  # ✅ 핸들러 호출 추가

- name: 서비스 종료 결과 메시지 출력
  ansible.builtin.debug:
    msg: "{{ item.item }} 서비스가 {{ '중지됨' if item.changed else '이미 중지되었거나 존재하지 않음.' }}"
  loop: "{{ svc_stop_result.results }}"

- name: 3) 서비스 설정 파일 제거
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ files }}"
  notify: 서비스 설정 삭제 완료  # ✅ 핸들러 호출 추가

- name: 4) 관련 패키지 제거
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent
  loop: "{{ pkgs }}"
  notify: 패키지 삭제 완료  # ✅ 핸들러 호출 추가
